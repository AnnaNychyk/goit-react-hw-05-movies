{"version":3,"file":"static/js/736.08bce756.chunk.js","mappings":"yOAmEA,UA/DgB,WACd,OAA0BA,EAAAA,EAAAA,UAAS,CACjCC,MAAO,GACPC,SAAS,EACTC,MAAO,OAHT,eAAOC,EAAP,KAAcC,EAAd,KAMQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,oGAEtBJ,GAAS,SAAAK,GAAS,yBACbA,GADa,IAEhBR,SAAS,EACTC,MAAO,MAHS,IAFI,UAQDQ,EAAAA,EAAAA,IAAgBL,GARf,OAQhBM,EARgB,OAUtBP,GAAS,SAAAK,GACP,OAAO,kBACFA,GADL,IAEET,MAAOW,EAAOC,SAEjB,IAfqB,gDAiBtBR,GAAS,SAAAK,GAAS,yBACbA,GADa,IAEhBP,MAAK,MAFW,IAjBI,yBAsBtBE,GAAS,SAAAK,GACP,OAAO,kBACFA,GADL,IAEER,SAAS,GAEZ,IA3BqB,4EAAH,qDA8BvBO,GACD,GAAE,CAACJ,EAAUC,IAEd,IAAQL,EAAUG,EAAVH,MAEFa,EAAUb,EAAMc,KAAI,SAAAC,GAAI,OAC5B,4BACE,wBAAKA,EAAKC,UACV,cAAGC,UAAU,SAAb,SAAuBF,EAAKG,YAFpBH,EAAKI,GADa,IAO9B,OACE,8BACGnB,EAAMoB,OAAS,EACdP,GAEA,qEAIP,C,4MC/DKQ,EAAW,+BACXC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+FACCC,EADD,UACUH,EADV,uCACiDC,GADjD,SAGkBG,IAAAA,IAAUD,GAH5B,uBAGGE,EAHH,EAGGA,KAHH,kBAIEA,GAJF,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BtB,GAA/B,kFACCmB,EADD,UACUH,EADV,kBAC4BhB,EAD5B,oBAC+CiB,EAD/C,4BAGkBG,IAAAA,IAAUD,GAH5B,uBAGGE,EAHH,EAGGA,KAHH,kBAIEA,GAJF,kEAOA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+BvB,GAA/B,kFACCmB,EADD,UACUH,EADV,kBAC4BhB,EAD5B,4BACuDiB,EADvD,4BAGkBG,IAAAA,IAAUD,GAH5B,uBAGGE,EAHH,EAGGA,KAHH,kBAIEA,GAJF,kEAOA,SAAehB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BL,GAA/B,kFACCmB,EADD,UACUH,EADV,kBAC4BhB,EAD5B,4BACuDiB,EADvD,mCAGkBG,IAAAA,IAAUD,GAH5B,uBAGGE,EAHH,EAGGA,KAHH,kBAIEA,GAJF,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,kFACCN,EADD,UACUH,EADV,iCAC2CC,EAD3C,kBACwDQ,EADxD,uDAGkBL,IAAAA,IAAUD,GAH5B,uBAGGE,EAHH,EAGGA,KAHH,kBAIEA,GAJF,kE","sources":["pages/Reviews.jsx","shared/service/api.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieReviews } from 'shared/service/api';\n\nconst Reviews = () => {\n  const [state, setState] = useState({\n    items: [],\n    loading: false,\n    error: null,\n  });\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        setState(prevState => ({\n          ...prevState,\n          loading: true,\n          error: null,\n        }));\n\n        const result = await getMovieReviews(movieId);\n\n        setState(prevState => {\n          return {\n            ...prevState,\n            items: result.results,\n          };\n        });\n      } catch (error) {\n        setState(prevState => ({\n          ...prevState,\n          error,\n        }));\n      } finally {\n        setState(prevState => {\n          return {\n            ...prevState,\n            loading: false,\n          };\n        });\n      }\n    };\n    fetchMovieReviews();\n  }, [setState, movieId]);\n\n  const { items } = state;\n\n  const reviews = items.map(item => (\n    <div key={item.id}>\n      <h3>{item.author}</h3>\n      <p className=\"review\">{item.content}</p>\n    </div>\n  ));\n\n  return (\n    <>\n      {items.length > 0 ? (\n        reviews\n      ) : (\n        <p>We don`t have any reviews for this movie</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = 'e236468c654efffdf9704cd975a74a96';\n\nexport async function getTrendingFilms() {\n  const url = `${BASE_URL}/trending/movie/day?api_key=${KEY}`;\n\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function getMovieDetails(movieId) {\n  const url = `${BASE_URL}/movie/${movieId}?api_key=${KEY}&language=en-US`;\n\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function getMovieCredits(movieId) {\n  const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}&language=en-US`;\n\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function getMovieReviews(movieId) {\n  const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`;\n\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function getSearchMovies(query) {\n  const url = `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`;\n\n  const { data } = await axios.get(url);\n  return data;\n}\n"],"names":["useState","items","loading","error","state","setState","movieId","useParams","useEffect","fetchMovieReviews","prevState","getMovieReviews","result","results","reviews","map","item","author","className","content","id","length","BASE_URL","KEY","getTrendingFilms","url","axios","data","getMovieDetails","getMovieCredits","getSearchMovies","query"],"sourceRoot":""}