{"version":3,"file":"static/js/736.08bce756.chunk.js","mappings":"yOAmEA,UA/DgB,WACd,OAA0BA,EAAAA,EAAAA,UAAS,CACjCC,MAAO,GACPC,SAAS,EACTC,MAAO,OAHT,eAAOC,EAAP,KAAcC,EAAd,KAMQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,oGAEtBJ,GAAS,SAAAK,GAAS,yBACbA,GADa,IAEhBR,SAAS,EACTC,MAAO,MAHS,IAFI,UAQDQ,EAAAA,EAAAA,IAAgBL,GARf,OAQhBM,EARgB,OAUtBP,GAAS,SAAAK,GACP,OAAO,kBACFA,GADL,IAEET,MAAOW,EAAOC,SAEjB,IAfqB,gDAiBtBR,GAAS,SAAAK,GAAS,yBACbA,GADa,IAEhBP,MAAK,MAFW,IAjBI,yBAsBtBE,GAAS,SAAAK,GACP,OAAO,kBACFA,GADL,IAEER,SAAS,GAEZ,IA3BqB,4EAAH,qDA8BvBO,GACD,GAAE,CAACJ,EAAUC,IAEd,IAAQL,EAAUG,EAAVH,MAEFa,EAAUb,EAAMc,KAAI,SAAAC,GAAI,OAC5B,4BACE,wBAAKA,EAAKC,UACV,cAAGC,UAAU,SAAb,SAAuBF,EAAKG,YAFpBH,EAAKI,GADa,IAO9B,OACE,8BACGnB,EAAMoB,OAAS,EACdP,GAEA,qEAIP,C,4MC/DKQ,EAAW,+BACXC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+FACCC,EADD,UACUH,EADV,uCACiDC,GADjD,SAGkBG,IAAAA,IAAUD,GAH5B,uBAGGE,EAHH,EAGGA,KAHH,kBAIEA,GAJF,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BtB,GAA/B,kFACCmB,EADD,UACUH,EADV,kBAC4BhB,EAD5B,oBAC+CiB,EAD/C,4BAGkBG,IAAAA,IAAUD,GAH5B,uBAGGE,EAHH,EAGGA,KAHH,kBAIEA,GAJF,kEAOA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+BvB,GAA/B,kFACCmB,EADD,UACUH,EADV,kBAC4BhB,EAD5B,4BACuDiB,EADvD,4BAGkBG,IAAAA,IAAUD,GAH5B,uBAGGE,EAHH,EAGGA,KAHH,kBAIEA,GAJF,kEAOA,SAAehB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BL,GAA/B,kFACCmB,EADD,UACUH,EADV,kBAC4BhB,EAD5B,4BACuDiB,EADvD,mCAGkBG,IAAAA,IAAUD,GAH5B,uBAGGE,EAHH,EAGGA,KAHH,kBAIEA,GAJF,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,kFACCN,EADD,UACUH,EADV,iCAC2CC,EAD3C,kBACwDQ,EADxD,uDAGkBL,IAAAA,IAAUD,GAH5B,uBAGGE,EAHH,EAGGA,KAHH,kBAIEA,GAJF,kE","sources":["pages/Reviews.jsx","shared/service/api.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { getMovieReviews } from 'shared/service/api';\r\n\r\nconst Reviews = () => {\r\n  const [state, setState] = useState({\r\n    items: [],\r\n    loading: false,\r\n    error: null,\r\n  });\r\n\r\n  const { movieId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const fetchMovieReviews = async () => {\r\n      try {\r\n        setState(prevState => ({\r\n          ...prevState,\r\n          loading: true,\r\n          error: null,\r\n        }));\r\n\r\n        const result = await getMovieReviews(movieId);\r\n\r\n        setState(prevState => {\r\n          return {\r\n            ...prevState,\r\n            items: result.results,\r\n          };\r\n        });\r\n      } catch (error) {\r\n        setState(prevState => ({\r\n          ...prevState,\r\n          error,\r\n        }));\r\n      } finally {\r\n        setState(prevState => {\r\n          return {\r\n            ...prevState,\r\n            loading: false,\r\n          };\r\n        });\r\n      }\r\n    };\r\n    fetchMovieReviews();\r\n  }, [setState, movieId]);\r\n\r\n  const { items } = state;\r\n\r\n  const reviews = items.map(item => (\r\n    <div key={item.id}>\r\n      <h3>{item.author}</h3>\r\n      <p className=\"review\">{item.content}</p>\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      {items.length > 0 ? (\r\n        reviews\r\n      ) : (\r\n        <p>We don`t have any reviews for this movie</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n","import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\nconst KEY = 'e236468c654efffdf9704cd975a74a96';\r\n\r\nexport async function getTrendingFilms() {\r\n  const url = `${BASE_URL}/trending/movie/day?api_key=${KEY}`;\r\n\r\n  const { data } = await axios.get(url);\r\n  return data;\r\n}\r\n\r\nexport async function getMovieDetails(movieId) {\r\n  const url = `${BASE_URL}/movie/${movieId}?api_key=${KEY}&language=en-US`;\r\n\r\n  const { data } = await axios.get(url);\r\n  return data;\r\n}\r\n\r\nexport async function getMovieCredits(movieId) {\r\n  const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}&language=en-US`;\r\n\r\n  const { data } = await axios.get(url);\r\n  return data;\r\n}\r\n\r\nexport async function getMovieReviews(movieId) {\r\n  const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`;\r\n\r\n  const { data } = await axios.get(url);\r\n  return data;\r\n}\r\n\r\nexport async function getSearchMovies(query) {\r\n  const url = `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`;\r\n\r\n  const { data } = await axios.get(url);\r\n  return data;\r\n}\r\n"],"names":["useState","items","loading","error","state","setState","movieId","useParams","useEffect","fetchMovieReviews","prevState","getMovieReviews","result","results","reviews","map","item","author","className","content","id","length","BASE_URL","KEY","getTrendingFilms","url","axios","data","getMovieDetails","getMovieCredits","getSearchMovies","query"],"sourceRoot":""}