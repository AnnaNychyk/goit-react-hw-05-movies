{"version":3,"file":"static/js/181.f197e4fa.chunk.js","mappings":"wRA+GA,EApGqB,WAAO,IAAD,EACzB,GAA0BA,EAAAA,EAAAA,UAAS,CACjCC,MAAO,GACPC,SAAS,EACTC,MAAO,OAHT,eAAOC,EAAP,KAAcC,EAAd,KAMQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAEXC,GAAO,WADIC,EAAAA,EAAAA,MACKP,aAAT,eAAgBM,OAAQ,WAGrCE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,oGAEtBR,GAAS,SAAAS,GAAS,yBACbA,GADa,IAEhBZ,SAAS,EACTC,MAAO,MAHS,IAFI,UAQDY,EAAAA,EAAAA,IAAgBT,GARf,OAQhBU,EARgB,OAUtBX,GAAS,SAAAS,GACP,OAAO,kBACFA,GADL,IAEEb,MAAOe,GAEV,IAfqB,gDAiBtBX,GAAS,SAAAS,GAAS,yBACbA,GADa,IAEhBX,MAAK,MAFW,IAjBI,yBAsBtBE,GAAS,SAAAS,GACP,OAAO,kBACFA,GADL,IAEEZ,SAAS,GAEZ,IA3BqB,4EAAH,qDA8BvBW,GACD,GAAE,CAACR,EAAUC,IAEd,MAMIF,EAAMH,MALRgB,EADF,EACEA,MACAC,EAFF,EAEEA,YACAC,EAHF,EAGEA,SAHF,IAIEC,OAAAA,OAJF,MAIW,GAJX,EAKEC,EALF,EAKEA,aAGIC,EAAMJ,EAAW,yCACeA,G,8pPAGhCK,EAAYC,KAAKC,MAAOJ,EAAe,GAAM,KAE7CK,EAAYN,EAAOO,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,MAEtD,OACE,iCACE,mBAAQC,UAAU,SAASC,QAtDhB,kBAAMvB,EAASE,EAAf,EAsDiCsB,KAAK,SAAjD,sBAGA,iBAAKF,UAAU,UAAf,WACE,gBAAKA,UAAU,SAASG,IAAKX,EAAKY,IAAI,MACtC,iBAAKJ,UAAU,OAAf,WACE,wBAAKb,KACL,wCAAgBM,EAAhB,QACA,sCACA,uBAAIJ,KACJ,oCACA,uBAAIO,WAGR,iBAAKI,UAAU,WAAf,WACE,mDACA,gBAAIA,UAAU,cAAd,WACE,yBACE,SAAC,KAAD,CAAM1B,MAAO,CAAEM,KAAAA,GAAQyB,GAAE,kBAAa7B,EAAb,SAAzB,qBAIF,yBACE,SAAC,KAAD,CAAMF,MAAO,CAAEM,KAAAA,GAAQyB,GAAE,kBAAa7B,EAAb,YAAzB,8BAON,SAAC,KAAD,MAGL,C,4MC3GK8B,EAAW,+BACXC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+FACCC,EADD,UACUH,EADV,uCACiDC,GADjD,SAGkBG,IAAAA,IAAUD,GAH5B,uBAGGE,EAHH,EAGGA,KAHH,kBAIEA,GAJF,kEAOA,SAAe1B,EAAtB,+CAAO,OAAP,oBAAO,WAA+BT,GAA/B,kFACCiC,EADD,UACUH,EADV,kBAC4B9B,EAD5B,oBAC+C+B,EAD/C,4BAGkBG,IAAAA,IAAUD,GAH5B,uBAGGE,EAHH,EAGGA,KAHH,kBAIEA,GAJF,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BpC,GAA/B,kFACCiC,EADD,UACUH,EADV,kBAC4B9B,EAD5B,4BACuD+B,EADvD,4BAGkBG,IAAAA,IAAUD,GAH5B,uBAGGE,EAHH,EAGGA,KAHH,kBAIEA,GAJF,kEAOA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+BrC,GAA/B,kFACCiC,EADD,UACUH,EADV,kBAC4B9B,EAD5B,4BACuD+B,EADvD,mCAGkBG,IAAAA,IAAUD,GAH5B,uBAGGE,EAHH,EAGGA,KAHH,kBAIEA,GAJF,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,kFACCN,EADD,UACUH,EADV,iCAC2CC,EAD3C,kBACwDQ,EADxD,uDAGkBL,IAAAA,IAAUD,GAH5B,uBAGGE,EAHH,EAGGA,KAHH,kBAIEA,GAJF,kE","sources":["pages/MovieDetails.jsx","shared/service/api.jsx"],"sourcesContent":["import {\r\n  Link,\r\n  useParams,\r\n  useNavigate,\r\n  Outlet,\r\n  useLocation,\r\n} from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { getMovieDetails } from 'shared/service/api';\r\nimport noPoster from '../images/noPosterAvailable.jpg';\r\n\r\nconst MovieDetails = () => {\r\n  const [state, setState] = useState({\r\n    items: [],\r\n    loading: false,\r\n    error: null,\r\n  });\r\n\r\n  const { movieId } = useParams();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const from = location.state?.from || '/movies';\r\n  const goBack = () => navigate(from);\r\n\r\n  useEffect(() => {\r\n    const fetchMovieDetails = async () => {\r\n      try {\r\n        setState(prevState => ({\r\n          ...prevState,\r\n          loading: true,\r\n          error: null,\r\n        }));\r\n\r\n        const result = await getMovieDetails(movieId);\r\n\r\n        setState(prevState => {\r\n          return {\r\n            ...prevState,\r\n            items: result,\r\n          };\r\n        });\r\n      } catch (error) {\r\n        setState(prevState => ({\r\n          ...prevState,\r\n          error,\r\n        }));\r\n      } finally {\r\n        setState(prevState => {\r\n          return {\r\n            ...prevState,\r\n            loading: false,\r\n          };\r\n        });\r\n      }\r\n    };\r\n    fetchMovieDetails();\r\n  }, [setState, movieId]);\r\n\r\n  const {\r\n    title,\r\n    poster_path,\r\n    overview,\r\n    genres = [],\r\n    vote_average,\r\n  } = state.items;\r\n\r\n  const img = poster_path\r\n    ? `https://image.tmdb.org/t/p/w500${poster_path}`\r\n    : noPoster;\r\n\r\n  const userScore = Math.round((vote_average / 10) * 100);\r\n\r\n  const getGenres = genres.map(({ name }) => name).join(', ');\r\n\r\n  return (\r\n    <>\r\n      <button className=\"goBack\" onClick={goBack} type=\"button\">\r\n        Go back\r\n      </button>\r\n      <div className=\"details\">\r\n        <img className=\"poster\" src={img} alt=\"\" />\r\n        <div className=\"info\">\r\n          <h2>{title}</h2>\r\n          <p>User Score: {userScore}%</p>\r\n          <h3>Overview</h3>\r\n          <p>{overview}</p>\r\n          <h4>Genres</h4>\r\n          <p>{getGenres}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"moreInfo\">\r\n        <p>Additional information</p>\r\n        <ul className=\"castReviews\">\r\n          <li>\r\n            <Link state={{ from }} to={`/movies/${movieId}/cast`}>\r\n              Cast\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link state={{ from }} to={`/movies/${movieId}/reviews`}>\r\n              Reviews\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <Outlet />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n","import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\nconst KEY = 'e236468c654efffdf9704cd975a74a96';\r\n\r\nexport async function getTrendingFilms() {\r\n  const url = `${BASE_URL}/trending/movie/day?api_key=${KEY}`;\r\n\r\n  const { data } = await axios.get(url);\r\n  return data;\r\n}\r\n\r\nexport async function getMovieDetails(movieId) {\r\n  const url = `${BASE_URL}/movie/${movieId}?api_key=${KEY}&language=en-US`;\r\n\r\n  const { data } = await axios.get(url);\r\n  return data;\r\n}\r\n\r\nexport async function getMovieCredits(movieId) {\r\n  const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}&language=en-US`;\r\n\r\n  const { data } = await axios.get(url);\r\n  return data;\r\n}\r\n\r\nexport async function getMovieReviews(movieId) {\r\n  const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`;\r\n\r\n  const { data } = await axios.get(url);\r\n  return data;\r\n}\r\n\r\nexport async function getSearchMovies(query) {\r\n  const url = `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`;\r\n\r\n  const { data } = await axios.get(url);\r\n  return data;\r\n}\r\n"],"names":["useState","items","loading","error","state","setState","movieId","useParams","navigate","useNavigate","from","useLocation","useEffect","fetchMovieDetails","prevState","getMovieDetails","result","title","poster_path","overview","genres","vote_average","img","userScore","Math","round","getGenres","map","name","join","className","onClick","type","src","alt","to","BASE_URL","KEY","getTrendingFilms","url","axios","data","getMovieCredits","getMovieReviews","getSearchMovies","query"],"sourceRoot":""}